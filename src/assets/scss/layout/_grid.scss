// Vars
$grid-min: 1;
$grid-max: 12;
$grid-buffer: .5rem;

.grid {
    display: flex;
    flex-wrap: wrap;

    &__expand {
        margin-left: -$grid-buffer;
        margin-right: -$grid-buffer;
    }

}
.item {
    display: flex;
    flex-basis: 100%;
    width: 100%;

    @for $i from $grid-min through ($grid-max) {
        &-#{$i} {
            position: relative;
            flex-basis: $i / $grid-max * 100%;
            width: $i / $grid-max * 100%;                
            padding-left: $grid-buffer;
            padding-right: $grid-buffer;                    
        }       
    }   
    @include atSmallest {
        @for $i from $grid-min through ($grid-max) {
            &-xs-#{$i} {
                position: relative;
                flex-basis: $i / $grid-max * 100%;
                width: $i / $grid-max * 100%;                
                padding-left: $grid-buffer;
                padding-right: $grid-buffer;                        
            }            
        }
    }
    @include atSmall {
        @for $i from $grid-min through ($grid-max) {
            &-sm-#{$i} {          
                position: relative;
                flex-basis: $i / $grid-max * 100%;
                width: $i / $grid-max * 100%;
                padding-left: $grid-buffer;
                padding-right: $grid-buffer;                        
            }  
        }           
    }
    @include atMedium {
        @for $i from $grid-min through ($grid-max) {
            &-md-#{$i} {            
                position: relative;
                flex-basis: $i / $grid-max * 100%;
                width: $i / $grid-max * 100%;
                padding-left: $grid-buffer;
                padding-right: $grid-buffer;                
            }   
        }          
    }  
    @include atLarge {
        @for $i from $grid-min through ($grid-max) {
            &-lg-#{$i} {            
                position: relative;
                flex-basis: $i / $grid-max * 100%;
                width: $i / $grid-max * 100%;
                padding-left: $grid-buffer;
                padding-right: $grid-buffer;                
            }              
        }
    }          
    @include atLargest {
        @for $i from $grid-min through ($grid-max) {
            &-xl-#{$i} {            
                position: relative;
                flex-basis: $i / $grid-max * 100%;
                width: $i / $grid-max * 100%;
                padding-left: $grid-buffer;
                padding-right: $grid-buffer;                
            }
        }       
    }
}

@include atSmallest {
    .show--md {
        display: none;
    }
} 
@include atSmall{
    .show--md {
        display: none;
    }
} 
@include atMedium {
    .show--md {
        display: block;
    }
}